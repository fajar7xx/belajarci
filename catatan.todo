buat file ini pakai To Do Tasks sandy081.todotasks

berhenti di menit:
    ✔ video 1 sampai menit 24:59 @done (10/4/2019, 4:48:19 PM)
    ✔ video 2 @done (10/7/2019, 5:07:07 PM)
    ☐ video 3 finish menit 35:20

yang dikerjakan adalah:
☐ fitur 1
☐ fitur 2
☐ fitur 3

bug :
    ☐ bug 1

instruksi dari video:
    1. folder application
    2. folder system untuk sementara jgn di setel karena ini core CI
    3. pada folder application yang perlu di perhatikan
        a. controllers
        b. models
        c. views
    folder  panggil contreller/paggil method
    4. untuk membuat view harus buat controller -> method -> lalu pangil viewsnya
    5. cara menghilangkan index.php agar memudahkan urlnya yaitu dengan menggunakan htaccess yaitu 
        removing index file disni -> https://codeigniter.com/user_guide/general/urls.html?highlight=htaccess#
    6. ubah konfigurasi di folder CONFIG
        a. config.php -> config['base_url'] = 'alamat url kita'; untu menentukan baseurl kita
        b. config.php -> $config['index_page'] = ''; buat kosong
    7. buat controller baru dengan aturan nama file dengan controller harus sama 
        a. buat class dlu
        b. buat method default dengan nama index
    8. buat routes untuk buat default controller nya $route['default_controller'] = 'nama_controller';
    9. panggil viewnya di dalam method controlelr yang bersangkutan
    10. buat folder templates sederhana untuk menampung header dan footer
    11. mengganti tilte tiap halaman dengan bentuk array
        a. bikin data juldul dengan array dnegan controlelr
        b. lalu kirim datanya ke view nya
        c. lalu array tadi masukkan ke title halaman statik di juudl dengan nama variabel dari array tadi
    12. buat fitur mahasiswa
        a. buat controller dengan awal kata huruf besar congoh Mahasiswa.php (controller Mahasiswa)
        b. di dalam controller buat method index.php untuk memanggil tampilan index
        c. buat view biar lebih gampang buat folder mahasiswa dan buat file index.php sesuai method didalam class di dalam controller
        d. 
    13. untuk terkonek ke database harus konek ke modul database
        a. konfigurasi database
        b. gunakan fungsi autoload untuk menjalankan fungsi koneksi database secara global
        c. file autoload berada di application/config/autoload.php
        d. cari seperti ini dan ubah $autoload['libraries'] = array('database');
        e. konfigurasi database di application/config/database.php
        f. ubah sesuai sama aja sih dengan setting database di php procedural
    14. menggunakan model untuk mengelola data. ingat mengelola data dengan MODEL
        a. model hasru di load dlu
        b. $this->load->model('Nama Model');
        c. pangil database di model menggunakan query builder
    15. gunakan fungsi construct jika ingin digunakan satu controller
    16. gunakan base_url untuk link kali ya
        a. aktifkan dulu base_url() di modul dan buat autoload
        b. merupakan bagian dari modul url
        c. aktifkan modul url yang merupakan bagian dari modul helper
    17. melakukan CRTUD pada CI untuk menggunakan form aktifkan form pada method
        a. Membuat fitur tambah data
            1. pertama buat halaman untuk menampilan form tambah data
            2. buat method tambah d controller mahasiswa
            3. buat file tambah.php di folder mahasiswa
            4. untuk mengecek apa kah inputan berjalan kita akan menggunakan codeigniter menggunkan formvalidation
            5. aktifkan modul form validation
            6. arahkan formnya ke  method yang bersangkukan artinya kalau actionnya form kosong berrati itu kita buat d controller data tersebut
            7.berikan rules per input nya
            8. posisikan penampilan pesan errornya
            9. jika datanya valid maka
            10 membuat pesan error dalam bahasa indonesa berada pada library language copy file yang berada pada system/language/english/form_validation_lang.php ke folder application/language/english
            11. ubah string di dalam file kedapam bahasa indonesia ya
            12. jika sudah valid semua kirim file nya kita akan insert ke database
            13. ambil datanya lalu kita akan jalankan sebuah fungsi di dalam model
            14. pakai query builder
            15. buat fitur flashdata utu kmenampilkan pesan sukses ketika data berhasil di input pada halaman tersebut   
            16. aktifkan modul session data agar flashdata bisa d jalankan
        b. hapus data
            1. referensi ke query builder
        c. update data
    18. membuat pencarian berdasarkan name keyword
    


